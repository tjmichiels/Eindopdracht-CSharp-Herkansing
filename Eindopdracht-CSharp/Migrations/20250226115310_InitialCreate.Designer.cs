// <auto-generated />
using Eindopdracht_CSharp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eindopdracht_CSharp.Migrations
{
    [DbContext(typeof(ZooDbContext))]
    [Migration("20250226115310_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityPattern")
                        .HasColumnType("int");

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DietaryClass")
                        .HasColumnType("int");

                    b.Property<int?>("EnclosureId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SecurityRequirement")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<double>("SpaceRequirement")
                        .HasColumnType("float");

                    b.Property<int>("Species")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("EnclosureId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivityPattern = 0,
                            CategoryId = 1,
                            DietaryClass = 4,
                            EnclosureId = 1,
                            Name = "Chanelle",
                            SecurityRequirement = 2,
                            Size = 3,
                            SpaceRequirement = 14.923443252845539,
                            Species = 4
                        },
                        new
                        {
                            Id = 2,
                            ActivityPattern = 2,
                            CategoryId = 5,
                            DietaryClass = 2,
                            EnclosureId = 3,
                            Name = "Providenci",
                            SecurityRequirement = 1,
                            Size = 0,
                            SpaceRequirement = 8.9817525494907411,
                            Species = 32
                        },
                        new
                        {
                            Id = 3,
                            ActivityPattern = 1,
                            CategoryId = 4,
                            DietaryClass = 3,
                            EnclosureId = 3,
                            Name = "Viva",
                            SecurityRequirement = 1,
                            Size = 3,
                            SpaceRequirement = 9.3153829438445328,
                            Species = 7
                        },
                        new
                        {
                            Id = 4,
                            ActivityPattern = 1,
                            CategoryId = 2,
                            DietaryClass = 0,
                            EnclosureId = 2,
                            Name = "Meda",
                            SecurityRequirement = 0,
                            Size = 3,
                            SpaceRequirement = 1.0055593220360459,
                            Species = 28
                        },
                        new
                        {
                            Id = 5,
                            ActivityPattern = 0,
                            CategoryId = 5,
                            DietaryClass = 0,
                            EnclosureId = 2,
                            Name = "Jamar",
                            SecurityRequirement = 1,
                            Size = 5,
                            SpaceRequirement = 5.5697026448134306,
                            Species = 20
                        },
                        new
                        {
                            Id = 6,
                            ActivityPattern = 2,
                            CategoryId = 3,
                            DietaryClass = 1,
                            EnclosureId = 3,
                            Name = "Samanta",
                            SecurityRequirement = 1,
                            Size = 1,
                            SpaceRequirement = 13.548255076668372,
                            Species = 12
                        },
                        new
                        {
                            Id = 7,
                            ActivityPattern = 0,
                            CategoryId = 2,
                            DietaryClass = 2,
                            EnclosureId = 1,
                            Name = "Bettye",
                            SecurityRequirement = 0,
                            Size = 3,
                            SpaceRequirement = 8.249516232600449,
                            Species = 18
                        },
                        new
                        {
                            Id = 8,
                            ActivityPattern = 2,
                            CategoryId = 1,
                            DietaryClass = 3,
                            EnclosureId = 2,
                            Name = "Lenna",
                            SecurityRequirement = 0,
                            Size = 3,
                            SpaceRequirement = 18.290522341669892,
                            Species = 15
                        },
                        new
                        {
                            Id = 9,
                            ActivityPattern = 1,
                            CategoryId = 5,
                            DietaryClass = 3,
                            EnclosureId = 1,
                            Name = "Ibrahim",
                            SecurityRequirement = 2,
                            Size = 4,
                            SpaceRequirement = 15.755415078795274,
                            Species = 7
                        },
                        new
                        {
                            Id = 10,
                            ActivityPattern = 1,
                            CategoryId = 4,
                            DietaryClass = 4,
                            EnclosureId = 2,
                            Name = "Xander",
                            SecurityRequirement = 2,
                            Size = 3,
                            SpaceRequirement = 2.5746396779547771,
                            Species = 16
                        });
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mammals"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Birds"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Reptiles"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Aquatic Animals"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Insects"
                        });
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Enclosure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Climate")
                        .HasColumnType("int");

                    b.Property<int>("HabitatType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SecurityLevel")
                        .HasColumnType("int");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<int?>("ZooId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZooId");

                    b.HasIndex("Id", "Name")
                        .IsUnique();

                    b.ToTable("Enclosures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Climate = 0,
                            HabitatType = 8,
                            Name = "Savanna",
                            SecurityLevel = 2,
                            Size = 500.0
                        },
                        new
                        {
                            Id = 2,
                            Climate = 0,
                            HabitatType = 1,
                            Name = "Rainforest",
                            SecurityLevel = 1,
                            Size = 300.0
                        },
                        new
                        {
                            Id = 3,
                            Climate = 2,
                            HabitatType = 1,
                            Name = "Arctic Zone",
                            SecurityLevel = 2,
                            Size = 400.0
                        });
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Zoo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zoos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Boehm, Kohler and Dach"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bahringer, Prosacco and Heller"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kozey - Veum"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Jast, Predovic and Wiegand"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Dooley - Langworth"
                        });
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Animal", b =>
                {
                    b.HasOne("Eindopdracht_CSharp.Models.Animal", null)
                        .WithMany("Prey")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Eindopdracht_CSharp.Models.Category", "Category")
                        .WithMany("Animals")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Eindopdracht_CSharp.Models.Enclosure", "Enclosure")
                        .WithMany("Animals")
                        .HasForeignKey("EnclosureId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");

                    b.Navigation("Enclosure");
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Enclosure", b =>
                {
                    b.HasOne("Eindopdracht_CSharp.Models.Zoo", null)
                        .WithMany("Enclosures")
                        .HasForeignKey("ZooId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Animal", b =>
                {
                    b.Navigation("Prey");
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Category", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Enclosure", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Zoo", b =>
                {
                    b.Navigation("Enclosures");
                });
#pragma warning restore 612, 618
        }
    }
}
