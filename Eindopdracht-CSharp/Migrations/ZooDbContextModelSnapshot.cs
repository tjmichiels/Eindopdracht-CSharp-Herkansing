// <auto-generated />
using Eindopdracht_CSharp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eindopdracht_CSharp.Migrations
{
    [DbContext(typeof(ZooDbContext))]
    partial class ZooDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityPattern")
                        .HasColumnType("int");

                    b.Property<int?>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DietaryClass")
                        .HasColumnType("int");

                    b.Property<int?>("EnclosureId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SecurityRequirement")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<double>("SpaceRequirement")
                        .HasColumnType("float");

                    b.Property<int>("Species")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("EnclosureId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivityPattern = 1,
                            CategoryId = 1,
                            DietaryClass = 0,
                            EnclosureId = 7,
                            Name = "Karli",
                            SecurityRequirement = 1,
                            Size = 5,
                            SpaceRequirement = 13.31547523301816,
                            Species = 9
                        },
                        new
                        {
                            Id = 2,
                            ActivityPattern = 0,
                            CategoryId = 1,
                            DietaryClass = 0,
                            EnclosureId = 8,
                            Name = "Cyril",
                            SecurityRequirement = 0,
                            Size = 2,
                            SpaceRequirement = 19.069224668057373,
                            Species = 24
                        },
                        new
                        {
                            Id = 3,
                            ActivityPattern = 0,
                            CategoryId = 4,
                            DietaryClass = 3,
                            EnclosureId = 15,
                            Name = "Lilian",
                            SecurityRequirement = 0,
                            Size = 5,
                            SpaceRequirement = 10.050986066753696,
                            Species = 16
                        },
                        new
                        {
                            Id = 4,
                            ActivityPattern = 1,
                            CategoryId = 2,
                            DietaryClass = 4,
                            EnclosureId = 3,
                            Name = "Claud",
                            SecurityRequirement = 0,
                            Size = 5,
                            SpaceRequirement = 1.8377896692900442,
                            Species = 33
                        },
                        new
                        {
                            Id = 5,
                            ActivityPattern = 0,
                            CategoryId = 4,
                            DietaryClass = 4,
                            EnclosureId = 9,
                            Name = "Else",
                            SecurityRequirement = 1,
                            Size = 5,
                            SpaceRequirement = 1.3997139115942203,
                            Species = 30
                        },
                        new
                        {
                            Id = 6,
                            ActivityPattern = 1,
                            CategoryId = 2,
                            DietaryClass = 0,
                            EnclosureId = 11,
                            Name = "Precious",
                            SecurityRequirement = 0,
                            Size = 4,
                            SpaceRequirement = 5.7552594998554287,
                            Species = 0
                        },
                        new
                        {
                            Id = 7,
                            ActivityPattern = 0,
                            CategoryId = 5,
                            DietaryClass = 4,
                            EnclosureId = 9,
                            Name = "Felipa",
                            SecurityRequirement = 0,
                            Size = 1,
                            SpaceRequirement = 16.034144786311124,
                            Species = 25
                        },
                        new
                        {
                            Id = 8,
                            ActivityPattern = 2,
                            CategoryId = 1,
                            DietaryClass = 3,
                            EnclosureId = 5,
                            Name = "Jake",
                            SecurityRequirement = 0,
                            Size = 2,
                            SpaceRequirement = 6.0659505641523106,
                            Species = 4
                        },
                        new
                        {
                            Id = 9,
                            ActivityPattern = 2,
                            CategoryId = 2,
                            DietaryClass = 0,
                            EnclosureId = 10,
                            Name = "Kieran",
                            SecurityRequirement = 1,
                            Size = 1,
                            SpaceRequirement = 1.9320586050273405,
                            Species = 0
                        },
                        new
                        {
                            Id = 10,
                            ActivityPattern = 1,
                            CategoryId = 4,
                            DietaryClass = 1,
                            EnclosureId = 13,
                            Name = "Chris",
                            SecurityRequirement = 1,
                            Size = 2,
                            SpaceRequirement = 15.166187599420848,
                            Species = 12
                        });
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Mammals"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Birds"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Reptiles"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Aquatic Animals"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Insects"
                        });
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Enclosure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Climate")
                        .HasColumnType("int");

                    b.Property<int>("HabitatType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SecurityLevel")
                        .HasColumnType("int");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<int?>("ZooId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZooId");

                    b.HasIndex("Id", "Name")
                        .IsUnique();

                    b.ToTable("Enclosures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Climate = 2,
                            HabitatType = 1,
                            Name = "Home",
                            SecurityLevel = 2,
                            Size = 443.0,
                            ZooId = 1
                        },
                        new
                        {
                            Id = 2,
                            Climate = 1,
                            HabitatType = 2,
                            Name = "Grocery",
                            SecurityLevel = 0,
                            Size = 513.0,
                            ZooId = 5
                        },
                        new
                        {
                            Id = 3,
                            Climate = 1,
                            HabitatType = 2,
                            Name = "Baby",
                            SecurityLevel = 0,
                            Size = 387.0,
                            ZooId = 2
                        },
                        new
                        {
                            Id = 4,
                            Climate = 1,
                            HabitatType = 4,
                            Name = "Clothing, Health & Music",
                            SecurityLevel = 1,
                            Size = 327.0,
                            ZooId = 5
                        },
                        new
                        {
                            Id = 5,
                            Climate = 1,
                            HabitatType = 1,
                            Name = "Grocery & Home",
                            SecurityLevel = 1,
                            Size = 466.0,
                            ZooId = 1
                        },
                        new
                        {
                            Id = 6,
                            Climate = 1,
                            HabitatType = 1,
                            Name = "Automotive, Toys & Automotive",
                            SecurityLevel = 1,
                            Size = 968.0,
                            ZooId = 4
                        },
                        new
                        {
                            Id = 7,
                            Climate = 0,
                            HabitatType = 2,
                            Name = "Outdoors & Shoes",
                            SecurityLevel = 0,
                            Size = 693.0,
                            ZooId = 4
                        },
                        new
                        {
                            Id = 8,
                            Climate = 1,
                            HabitatType = 2,
                            Name = "Books, Garden & Electronics",
                            SecurityLevel = 2,
                            Size = 471.0,
                            ZooId = 4
                        },
                        new
                        {
                            Id = 9,
                            Climate = 1,
                            HabitatType = 1,
                            Name = "Kids",
                            SecurityLevel = 0,
                            Size = 669.0,
                            ZooId = 3
                        },
                        new
                        {
                            Id = 10,
                            Climate = 1,
                            HabitatType = 4,
                            Name = "Garden, Home & Sports",
                            SecurityLevel = 2,
                            Size = 255.0,
                            ZooId = 1
                        },
                        new
                        {
                            Id = 11,
                            Climate = 0,
                            HabitatType = 8,
                            Name = "Books",
                            SecurityLevel = 1,
                            Size = 996.0,
                            ZooId = 2
                        },
                        new
                        {
                            Id = 12,
                            Climate = 2,
                            HabitatType = 8,
                            Name = "Health, Beauty & Computers",
                            SecurityLevel = 0,
                            Size = 847.0,
                            ZooId = 1
                        },
                        new
                        {
                            Id = 13,
                            Climate = 0,
                            HabitatType = 2,
                            Name = "Electronics, Automotive & Home",
                            SecurityLevel = 1,
                            Size = 133.0,
                            ZooId = 3
                        },
                        new
                        {
                            Id = 14,
                            Climate = 1,
                            HabitatType = 1,
                            Name = "Shoes & Tools",
                            SecurityLevel = 0,
                            Size = 332.0,
                            ZooId = 5
                        },
                        new
                        {
                            Id = 15,
                            Climate = 2,
                            HabitatType = 8,
                            Name = "Music, Music & Industrial",
                            SecurityLevel = 1,
                            Size = 971.0,
                            ZooId = 5
                        });
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Zoo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Zoos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pollich Group"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cormier Inc"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Blick LLC"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Okuneva - Kulas"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Senger Group"
                        });
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Animal", b =>
                {
                    b.HasOne("Eindopdracht_CSharp.Models.Animal", null)
                        .WithMany("Prey")
                        .HasForeignKey("AnimalId");

                    b.HasOne("Eindopdracht_CSharp.Models.Category", "Category")
                        .WithMany("Animals")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Eindopdracht_CSharp.Models.Enclosure", "Enclosure")
                        .WithMany("Animals")
                        .HasForeignKey("EnclosureId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");

                    b.Navigation("Enclosure");
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Enclosure", b =>
                {
                    b.HasOne("Eindopdracht_CSharp.Models.Zoo", "Zoo")
                        .WithMany("Enclosures")
                        .HasForeignKey("ZooId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Zoo");
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Animal", b =>
                {
                    b.Navigation("Prey");
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Category", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Enclosure", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Eindopdracht_CSharp.Models.Zoo", b =>
                {
                    b.Navigation("Enclosures");
                });
#pragma warning restore 612, 618
        }
    }
}
